/*

Modelo de Caja. es la forma en que CSS ve a los elementos HTMl Â¿y como los ve?
como si fueran cajas con las siguientes propiedades
1. el contenido (content), (texto) del elemento HTMl, tomando en cuenta sus dimensiones (width & height)
2. el borde (border): Lo que deliminta cada uno de los elementos HTML
3. el relleno (padding): son las distancias internas (la distancia del borde al contenido)
4. el margen (margin): son las distancias externas (la disctancia entre el elemento HTML y sus elementos hermanos o padres)

Dentro del modelo de caja hay que considerar que una caja tendras 4 lados en base a las manesillas del reloj
1 arriba (top)
2. derecha (rigth)
3. abajo (bottom)
4 izquierda (left)

*/

body {
    margin: 0;
}


/*esto es una caja en el h1 ver css reference*/

h1 {
    width: 400px;
    height: 200px;
    /*Propiedades tipo shorthand*/
    border-color: green;
    border-top-color: red;
    border-width: medium;
    /*thin: 1px, medium: 3px, thick: 5px*/
    border-style: solid;
    /*se puede simplificar segun las necesidades*/
    border: 2px dashed darkblue;
}

.caja-uno,
.caja-dos {
    background-color: chocolate;
    border: medium solid orange;
    padding: 20px;
    /*recordemos que el padding son las distancias internas del borde al contenido*/
    margin: 20px;
    /*recordemos que el margin son las distancias externas*/
    /*
    Esto aplica para margin y padding
    * un valor aplica a los 4 lados
    * dos valores 
    - el primer valor es para los lados verticales (top y bottom)
    - el segundo valor es para los lados horizontales (left y rigth)
    * tres valores
    - primer valor es para top.
    - el segundo valor es para los horizontales left y right.
    - tercer valor es para bottom.
    * cuatro valores piensa en las manecillas del reloj
    - primer valor top (12)
    - segundo valor es para right (3)
    - tercer valor es bottom (6)
    - cuarto valor es Left (9)
    */
    padding: 20px 40px;
    margin: 40px 20px;
    padding: 0 40px 20px;
    margin: 50px 30px 0;
    padding: 0 40px 20px 50px;
    margin: 100px 50px 30px 0;
}


/*
Caja de linea EJEMPLO LINEA 84 CSS esto aplica para todos las etiquetas en linea
    -Ocupan el espacio necesario para mostrar su contenido.
    -No tienen dimensiones modificables (alto, ancho).
    -Permiten otros elementos a su lado.
    -Padding y margin solo empujan a elementos adyacentes en horizontal, nunca en vertical.
caja de Bloque
    -Ocupan todo el ancho disponible, lo que genera saltos de linea.
    -Tienen dimensiones modificables (alto, ancho)
    -No permiten otro elementos a su lado(aunque especifique un ancho, siguen ocupando 
    -todo el espacio disponible a lo ancho generando saltos de linea).
*/

.caja-linea,
.caja-bloque {
    background-color: darkcyan;
    width: 500px;
    height: 250px;
    border: medium solid black;
    padding: 16px;
    margin: 0 32px;
}

.caja-bloque {
    margin: 32px;
}

.caja-linea {
    margin: 48px;
}


/*La propiedad display tiene lo siguiente
    -inline
    -block
    -inline-block - se comporta como un elemento de linea pero acepta modificar sus dimensiones (alto y ancho).
    -none
    -table
    -list-item
    -flex
    -grid
*/

.caja-none,
.caja-linea-bloque,
.caja-hidden {
    background-color: greenyellow;
    color: black;
    width: 600px;
    height: 300px;
    border: medium solid black;
}

.caja-linea-bloque {
    display: inline-block;
}

.caja-none {
    display: none;
}


/*Esta propiedad no hace que desaparezca como la de display none si no que no lo hace visible pero si ocupa el espacio*/

.caja-hidden {
    visibility: hidden;
}